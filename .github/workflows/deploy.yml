name: Deploy Lambda

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # - name: Set up Python
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: '3.8'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3.11 python3.11-venv python3-pip jq zip
          pip3 install boto3

      # - name: Deploy to AWS Lambda
      #   uses: appleboy/lambda-action@master
      #   with:
      #     aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     function_name: 'YourLambdaFunctionName'
      #     region: 'us-east-1'
      #     zip_file: 'lambda_function.zip'
      #     runtime: 'python3.8'
      #     handler_name: 'app.lambda_handler'
      #     publish: true

      - name: Set environment variables
        id: set-env-vars 
        run: |
          if [[ "${{ githu.ref_name }}" == "main" ]]; then
            echo "ENV=prod" >> $GITHUB_ENV
            echo "API_KEY=prod_api_key" >> $GITHUB_ENV
            ech "LOG_LEVEL=INFO" >> $GITHUB_ENV
          else
            echo "ENV=dev" >> $GITHUB_ENV
            echo "API_KEY=dev_api_key" >> $GITHUB_ENV
            ech "LOG_LEVEL=DEBUG" >> $GITHUB_ENV
          fi


      - name: Package Lambda Function
        run: |
          cd lambda_function
          python3.11 -m venv venv
          source venv/bin/activate
          mkdir package
          pip install --no-cache-dir -r requirements.txt -t ./package
          cp app.py ./package/
          cd package
          zip -r ../../lambda.zip .
          cd ../..
      - name: Deploy to AWS Lambda

      - name: Verify Deployment
        run: |
          echo "Deployment to AWS Lambda completed successfully." 

